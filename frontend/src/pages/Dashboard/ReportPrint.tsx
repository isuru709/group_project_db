import { forwardRef } from "react";
import { formatLKR } from "../../utils/currency";

interface DashboardData {
  totalAppointments: number;
  totalPatients: number;
  totalRevenue: number;
  todayAppointments: number;
  pendingInvoices: number;
  pendingAmount: number;
  totalInvoices: number;
}

interface ReportPrintProps {
  overview: DashboardData;
  userRole?: string;
  userName?: string;
}

const ReportPrint = forwardRef<HTMLDivElement, ReportPrintProps>(
  ({ overview, userRole, userName }, ref) => {
    const formatCurrency = (amount: number) => {
      return formatLKR(amount);
    };

    const formatDate = () => {
      return new Date().toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });
    };

    return (
      <div 
        ref={ref} 
        className="p-8 bg-white text-black max-w-[800px] mx-auto font-sans print:w-full print:shadow-none"
      >
        {/* Header */}
        <div className="text-center mb-8 print:mb-6">
          <h1 className="text-3xl font-bold text-blue-600 mb-2">üè• CATMS Clinic</h1>
          <p className="text-xl text-gray-700">Dashboard Report Summary</p>
          <p className="text-sm text-gray-500">Comprehensive Clinic Performance Overview</p>
        </div>

        {/* Report Metadata */}
        <div className="bg-gray-50 p-4 rounded-lg mb-8 print:mb-6">
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div>
              <p><span className="font-medium">Generated By:</span> {userName || 'System User'}</p>
              <p><span className="font-medium">Role:</span> {userRole || 'User'}</p>
            </div>
            <div>
              <p><span className="font-medium">Report Date:</span> {formatDate()}</p>
              <p><span className="font-medium">Report Type:</span> Dashboard Summary</p>
            </div>
          </div>
        </div>

        {/* Key Performance Indicators */}
        <div className="mb-8 print:mb-6">
          <h2 className="text-2xl font-semibold text-gray-800 mb-4">Key Performance Indicators</h2>
          <div className="grid grid-cols-2 gap-6">
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <h3 className="text-lg font-semibold text-blue-800 mb-2">Patient Metrics</h3>
              <div className="space-y-2">
                <div className="flex justify-between">
                  <span className="font-medium">Total Patients:</span>
                  <span className="font-bold text-blue-600">{overview.totalPatients}</span>
                </div>
                <div className="flex justify-between">
                  <span className="font-medium">Today's Appointments:</span>
                  <span className="font-bold text-blue-600">{overview.todayAppointments}</span>
                </div>
              </div>
            </div>

            <div className="bg-green-50 border border-green-200 rounded-lg p-4">
              <h3 className="text-lg font-semibold text-green-800 mb-2">Appointment Metrics</h3>
              <div className="space-y-2">
                <div className="flex justify-between">
                  <span className="font-medium">Total Appointments:</span>
                  <span className="font-bold text-green-600">{overview.totalAppointments}</span>
                </div>
                <div className="flex justify-between">
                  <span className="font-medium">Completion Rate:</span>
                  <span className="font-bold text-green-600">
                    {overview.totalAppointments > 0 
                      ? Math.round((overview.todayAppointments / overview.totalAppointments) * 100)
                      : 0}%
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Financial Summary */}
        <div className="mb-8 print:mb-6">
          <h2 className="text-2xl font-semibold text-gray-800 mb-4">Financial Summary</h2>
          <div className="bg-gray-50 border border-gray-200 rounded-lg p-6">
            <div className="grid grid-cols-2 gap-8">
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <span className="text-lg font-medium">Total Revenue:</span>
                  <span className="text-2xl font-bold text-green-600">
                    {formatCurrency(overview.totalRevenue)}
                  </span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-lg font-medium">Total Invoices:</span>
                  <span className="text-xl font-semibold text-blue-600">
                    {overview.totalInvoices}
                  </span>
                </div>
              </div>
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <span className="text-lg font-medium">Pending Amount:</span>
                  <span className="text-xl font-semibold text-orange-600">
                    {formatCurrency(overview.pendingAmount)}
                  </span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-lg font-medium">Pending Invoices:</span>
                  <span className="text-xl font-semibold text-red-600">
                    {overview.pendingInvoices}
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Performance Metrics */}
        <div className="mb-8 print:mb-6">
          <h2 className="text-2xl font-semibold text-gray-800 mb-4">Performance Metrics</h2>
          <div className="grid grid-cols-3 gap-4">
            <div className="text-center p-4 bg-blue-100 rounded-lg">
              <div className="text-2xl font-bold text-blue-600">
                {overview.totalPatients > 0 
                  ? Math.round((overview.totalAppointments / overview.totalPatients) * 100) / 100
                  : 0}
              </div>
              <div className="text-sm text-blue-800">Avg Appointments per Patient</div>
            </div>
            <div className="text-center p-4 bg-green-100 rounded-lg">
              <div className="text-2xl font-bold text-green-600">
                {overview.totalInvoices > 0 
                  ? formatCurrency(overview.totalRevenue / overview.totalInvoices)
                  : formatCurrency(0)}
              </div>
              <div className="text-sm text-green-800">Average Invoice Value</div>
            </div>
            <div className="text-center p-4 bg-purple-100 rounded-lg">
              <div className="text-2xl font-bold text-purple-600">
                {overview.totalRevenue > 0 
                  ? Math.round(((overview.totalRevenue - overview.pendingAmount) / overview.totalRevenue) * 100)
                  : 0}%
              </div>
              <div className="text-sm text-purple-800">Collection Rate</div>
            </div>
          </div>
        </div>

        {/* Summary Notes */}
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-8 print:mb-6">
          <h3 className="text-lg font-semibold text-yellow-800 mb-2">Summary Notes</h3>
          <div className="text-sm text-yellow-700 space-y-1">
            <p>‚Ä¢ This report provides a comprehensive overview of clinic performance</p>
            <p>‚Ä¢ Financial metrics include total revenue and pending amounts</p>
            <p>‚Ä¢ Patient and appointment data shows operational efficiency</p>
            <p>‚Ä¢ Performance metrics help identify areas for improvement</p>
          </div>
        </div>

        {/* Footer */}
        <div className="border-t border-gray-200 pt-6 text-center">
          <p className="text-sm text-gray-600 mb-2">
            CATMS Clinic - Professional Healthcare Management System
          </p>
          <p className="text-xs text-gray-500">
            This report was generated automatically by the CATMS system
          </p>
          <p className="text-xs text-gray-500 mt-2">
            Report generated on: {formatDate()}
          </p>
        </div>
      </div>
    );
  }
);

ReportPrint.displayName = 'ReportPrint';

export default ReportPrint;
